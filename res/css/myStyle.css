*{
    box-sizing: border-box;
}

main::after{
    content: "";
    display: table;
    clear: both;
}
/* 속성 선택자 */
/* [속성명 = "속성값" - 해당하는 속성값과 동일할 경우 아래의 css속성 적용] */
/* 
= : 속성값이 동일할 경우 적용
~= : 속성값이 포함된 경우 적용(동일한 단어 기준)
|= : 속성값으로 시작하는 경우 적용(단어나 단어- 일 경우 가능)
    class|="col" -> <h1 class="col abc>,<h1 class="col-abc>가능
    class|="col" -> <h1 class="col abc>불가능
^= : 속성값으로 시작하는 경우 적용(문자열 기준)
    class|="col" -> <h1 class="col abc>,<h1 class="col-abc>가능
    class|="col" -> <h1 class="col abc>가능
$= : 속성값으로 끝나는 경우 적용(문자열 기준)
*= : 속성값이 포함된 경우 적용(문자열 기준)
*/
/* class*="col-" 은 속성이 class이고 값이 col- 이 포함된 경우 적용 */
[class*="col-"] {
    float: left;
    padding: 15px;
}

header{
    background-color: #9933cc;
    color: white;
    padding: 15px;
}

main .menu ul{
    list-style-type: none;
    margin: 0;
    padding: 0;
}

main .menu li{
    padding: 8px;
    margin-bottom: 8px;
    background-color: #33b5b5;
    color: white;
    /* box-shadow: 좌우측그림자크기 상하측그림자크기 흐림정도 색상 */
    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 1px 1px 2px rgba(0, 0, 0, 0.24);
}

main .menu li:hover{
    background-color: #0099cc;
}

.right{
    background-color: #33b5b5;
    padding: 15px;
    color: white;
    text-align: center;
    font-size: 14px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 2px rgba(0, 0, 0, 0.24);
}
footer{
    background-color: #0099cc;
    color: white;
    text-align: center;
    font-size: 12px;
    padding: 15px;
}
/* 스마트 폰 화면 */
/* 디바니스의 최소 너비가 600px 미만일 경우 아래의 css 속성을 적용 */
[class*="col-"]{
    width: 100%;
}
/* 테블릿 화면 */
/* 디바이스의 최소 너비가 600px 까지는 아래의 CSS 속성을 적용 */
@media only screen and (min-width:600px){
    .col-s-1 {width: 8.33%;}
    .col-s-2 {width: 16.66%;}
    .col-s-3 {width: 25%;}
    .col-s-4 {width: 33.33%;}
    .col-s-5 {width: 41.66%;}
    .col-s-6 {width: 50%;}
    .col-s-7 {width: 58.33%;}
    .col-s-8 {width: 66.66%;}
    .col-s-9 {width: 75%;}
    .col-s-10 {width: 83.33%;}
    .col-s-11 {width: 91.66%;}
    .col-s-12 {width: 100%;}
}

/* 미디어쿼리를 사용하여 디바이스의 화면 크기에 따라 css 속성을 변경하여 출력함 */
/* @media : 미디어쿼리를 사용한다는 의미 */
/* only : 조겅을 사용한다는 의미 */
/* screen : 디바이스의 종류 */
/* and : 조건 추가 */
/* (min-width: 768px) : 디바이스의 최소 너비가 768px보다 클 경우(최소 너비가
768px 까지) */
/* 데스크 탑 */
@media only screen and (min-width: 768px) {
  /* grid 시스템을 적용하여 화면의 너비를 설절한 내용 */
  /* grid 시스템 : 웹의 화면을 총 12개의 column을 나누어서 화면을 디자인하는 방식 */
  
  .col-1 {width: 8.33%;}
  .col-2 {width: 16.66%;}
  .col-3 {width: 25%;}
  .col-4 {width: 33.33%;}
  .col-5 {width: 41.66%;}
  .col-6 {width: 50%;}
  .col-7 {width: 58.33%;}
  .col-8 {width: 66.66%;}
  .col-9 {width: 75%;}
  .col-10 {width: 83.33%;}
  .col-11 {width: 91.66%;}
  .col-12 {width: 100%;}
}

/* 
반응형 웹: 디바이스의 화면 크기에 따라서 여러가지 화면으로 변경되는 웹 사이트 구축 방식
미디어 쿼리를 사용하여 화면의 크기에 따라서 css 속성을 변경시켜 여러가지 화면 크기의
사이트를 구출

뷰포트(viewport):웹 페이지에서 사용자가 볼 수 있는 영역
-디바이스에 따라서 다르면 컴퓨터 화면보다 스마트폰의 화면이 더 작음
-html5는 웹디자이너가 meta 태그를 통해서 뷰포트를 설정할 수 있음
-<meta name="viewport" content="width=device-width, initial-scale=1.0">
width=device-width: 디바이스 화면 너비로 현재 사이트의 너비를 설정
initial-scale=1.0 : 현재 화면의 확대/축소 수준. 1.0은 현재 화며느이 크기를 100%로 사용함

미디어 쿼리:반응형 웹 사이트를 제작하는데 필수적인 속성
-지정한 화면 크기에 따라서 css속성을 다르게 사용할 수 있음
-미디어 쿼리는 구형 브라우져에서는 동작하지 않을 수 있음
사용법
@media not/only 미디어타입 and(미디어쿼리 적용 옵션){
    css코드
}
not/only: only는 지정한 css 형식대로 사용하겠다는 의미, not 지정한 css형식의 반대로 사용
미디어타입: all, print, screen, speech
all: 기본값 모든 디바이스에 적용
print: 각종 프린트 디바이스
screen: 컴퓨터 모디터, 테블릿 화면, 스마트폰 화면 등 각종 디바이스 화면
speech: 문자를 읽어주는 디바이스 (TTS)

-미디어쿼리 적용 옵션: 주로 max-width, min-width 를 사용(웹 사이트 제작은 screen, all을 주로 사용함)

각 디바이스 마다의 설정 크기(bootstrap 기준)
-extra small : 576px 미만
-small : 576px 까지
-medium : 768px 까지
-large : 992px 까지
-extra large : 1200px 까지
*/
